.SUFFIXES: .inc .f .F
#-----------------------------------------------------------------------
#
# Makefile adapted to UltraSPARC III and IV running under Solaris 9
# Fortran Compiler version  (f90 -V)
# f90: Sun Fortran 95 7.1 Patch 112762-06 2003/11/18
# Sun MPI 6.0 (part of HPC Cluster Tools V5.0)
# (some patches had to be installed)
# Sun no longer supports a separate f77 compiler
#
# serial version
#
# Atya El-Shekh elshekh@rz.rwth-aachen.de
# Dieter an Mey anmey@rz.rwth-aachen.de
# Center for Computing and Communication, RWTH Aachen University
# Mon Jul 19 13:38:07 MEST 2004
#
# -fast automatically choses optimal switches for the current platform
# -xarch=v8plusb choses the 32-bit mode for the UltraSPARC III and IV platform
# exact settings can be found out with the command fpversion
#
#-------------------------------------------------------------------------
# 
# based on the Makefile for SUN Ultra2 and possibly SUN Ultra3
# modified and tested by Helmut Puchner <helmut@lsil.com>
# under Solaris 5.7
#
#-----------------------------------------------------------------------

# all CPP processed fortran files have the extension .f 
SUFFIX=.f

#-----------------------------------------------------------------------
# fortran compiler FC and linker FCL
#-----------------------------------------------------------------------
FC= f90
F77=f77
FCL=$(FC)

#-----------------------------------------------------------------------
# C-preprocessor define any of the flags given below
# single_precission     single precission BLAS/LAPACK calls
# vector
# essl                  use ESSL call sequence for DSYGV
# NGXhalf               charge density   reduced in X direction
# NGZhalf               charge density   reduced in Z direction
# wNGXhalf              gamma point only reduced in X direction
# wNGZhalf              gamma point only reduced in Z direction
#-----------------------------------------------------------------------

CPP     =  ./preprocess <$*.F | /usr/ccs/lib/cpp -P -DHOST=\"Sun\" \
  -Dkind8 -DNGXhalf -DCACHE_SIZE=0  -DNOZTRMM >$*$(SUFFIX)

#-----------------------------------------------------------------------
# general fortran flags
#-----------------------------------------------------------------------

# Ultra-Sparc 2
#FFLAGS =  -free  -fast -dalign -xarch=v8plusa 
# Ultra-Sparc 3 64 bit
FFLAGS =  -g -free  -fast -dalign 

# FFLAGS_F77  only require when the fft3dlib_f77 is used
FFLAGS_F77 =  -r8 -i4 -fast  -dalign 

#-----------------------------------------------------------------------
# optimisation flags
#-----------------------------------------------------------------------
OFLAG  =  
OFLAG_HIGH = $(OFLAG)

OBJ_HIGH = none
OBJ_NOOPT = none

DEBUG  = 
INCS   =  -I../../archives/mpich/include/
INLINE = $(OFLAG)

#-----------------------------------------------------------------------
# options for linking
#-----------------------------------------------------------------------
LINK    = $(FFLAGS)

LIB     = -lsunperf  -L../vasp.4.lib ../vasp.4.lib/linpack_double.o -ldmy 
 
# only slight improvement with the shared-memory parallel version of sunperf 
# execute after specifying the number of threads with OMP_NUM_THREADS=2 for example
#LIB     = -L../vasp.4.lib -mt -parallel -lsunperf  -L../vasp.4.lib ../vasp.4.lib/linpack_double.o -ldmy  

#-----------------------------------------------------------------------
#
# use the standard f90 FFT transformations of Juergen Furthmueller
#
#-----------------------------------------------------------------------
FFT3D   = fft3dfurth.o fft3dlib.o

#-----------------------------------------------------------------------
# MPI version using SUN MPI from the hpc package:
# before compiling a few things must be done manually:
# 1. `IU5=5' to `IU5=35' in main.F
# 1. `IU5=5' to `IU5=35' in main.F
#-----------------------------------------------------------------------
#
#FC=mpf90
#F77=mpf77
#FCL=$(FC)
#CPP     = ./preprocess <$*.F | /usr/ccs/lib/cpp -C -P -DMPI -Duse_collective -Dkind8 -DNGZhalf >$*.f
#MPI     = -lmpi
#LIB     = -L../vasp.4.lib  ../vasp.4.lib/linpack_double.o -ldmy -xlic_lib=sunperf $(MPI)
#FFT3D   = fftmpi.o fftmpi_map.o fft3dlib.o


#-----------------------------------------------------------------------
# general rules and compile lines
#-----------------------------------------------------------------------
BASIC=   symmetry.o symlib.o   lattlib.o  random.o   

SOURCE=  base.o     mpi.o      smart_allocate.o      xml.o  \
         constant.o jacobi.o   main_mpi.o  scala.o   \
         asa.o      lattice.o  poscar.o   ini.o      setex.o     radial.o  \
         pseudo.o   mgrid.o    mkpoints.o wave.o      wave_mpi.o  $(BASIC) \
         nonl.o     nonlr.o    dfast.o    choleski2.o    \
         mix.o      charge.o   xcgrad.o   xcspin.o    potex1.o   potex2.o  \
         metagga.o  constrmag.o pot.o      cl_shift.o force.o    dos.o      elf.o      \
         tet.o      hamil.o    steep.o    \
         chain.o    dyna.o     relativistic.o LDApU.o sphpro.o  paw.o   us.o \
         ebs.o      wavpre.o   wavpre_noio.o broyden.o \
         dynbr.o    rmm-diis.o reader.o   writer.o   tutor.o xml_writer.o \
         brent.o    stufak.o   fileio.o   opergrid.o stepver.o  \
         dipol.o    xclib.o    chgloc.o   subrot.o   optreal.o   davidson.o \
         edtest.o   electron.o shm.o      pardens.o  paircorrection.o \
         optics.o   constr_cell_relax.o   stm.o    finite_diff.o \
         elpol.o    setlocalpp.o 
 
INC=

vasp: $(SOURCE) $(FFT3D) $(INC) main.o 
	rm -f vasp
	$(FCL) -o vasp $(LINK) main.o  $(SOURCE)   $(FFT3D) $(LIB) 
makeparam: $(SOURCE) $(FFT3D) makeparam.o main.F $(INC)
	$(FCL) -o makeparam  $(LINK) makeparam.o $(SOURCE) $(FFT3D) $(LIB)
zgemmtest: zgemmtest.o base.o random.o $(INC)
	$(FCL) -o zgemmtest $(LINK) zgemmtest.o random.o base.o $(LIB)
dgemmtest: dgemmtest.o base.o random.o $(INC)
	$(FCL) -o dgemmtest $(LINK) dgemmtest.o random.o base.o $(LIB) 
ffttest: base.o smart_allocate.o mpi.o mgrid.o random.o ffttest.o $(FFT3D) $(INC)
	$(FCL) -o ffttest $(LINK) ffttest.o mpi.o mgrid.o random.o smart_allocate.o base.o $(FFT3D) $(LIB)
kpoints: $(SOURCE) $(FFT3D) makekpoints.o main.F $(INC)
	$(FCL) -o kpoints $(LINK) makekpoints.o $(SOURCE) $(FFT3D) $(LIB)

clean:	
	-rm -f *.g *.f *.o *.L *.mod ; touch *.F

main.o: main$(SUFFIX)
	$(FC) $(FFLAGS)$(DEBUG)  $(INCS) -c main$(SUFFIX)
xcgrad.o: xcgrad$(SUFFIX)
	$(FC) $(FFLAGS) $(INLINE)  $(INCS) -c xcgrad$(SUFFIX)
xcspin.o: xcspin$(SUFFIX)
	$(FC) $(FFLAGS) $(INLINE)  $(INCS) -c xcspin$(SUFFIX)

makeparam.o: makeparam$(SUFFIX)
	$(FC) $(FFLAGS)$(DEBUG)  $(INCS) -c makeparam$(SUFFIX)

makeparam$(SUFFIX): makeparam.F main.F 
#
# MIND: I do not have a full dependency list for the include
# and MODULES: here are only the minimal basic dependencies
# if one strucuture is changed then touch_dep must be called
# with the corresponding name of the structure
#
base.o: base.inc base.F
mgrid.o: mgrid.inc mgrid.F
constant.o: constant.inc constant.F
lattice.o: lattice.inc lattice.F
setex.o: setexm.inc setex.F
pseudo.o: pseudo.inc pseudo.F
poscar.o: poscar.inc poscar.F
mkpoints.o: mkpoints.inc mkpoints.F
wave.o: wave.inc wave.F
nonl.o: nonl.inc nonl.F
nonlr.o: nonlr.inc nonlr.F

$(OBJ_HIGH):
	$(CPP)
	$(FC) $(FFLAGS) $(OFLAG_HIGH) $(INCS) -c $*$(SUFFIX)
$(OBJ_NOOPT):
	$(CPP)
	$(FC) $(FFLAGS) $(INCS) -c $*$(SUFFIX)

fft3dlib_f77.o: fft3dlib_f77.F
	$(CPP)
	$(F77) $(FFLAGS_F77) -c $*$(SUFFIX)

.F.o:
	$(CPP)
	$(FC) $(FFLAGS) $(OFLAG) $(INCS) -c $*$(SUFFIX)
.F$(SUFFIX):
	$(CPP)
$(SUFFIX).o:
	$(FC) $(FFLAGS) $(OFLAG) $(INCS) -c $*$(SUFFIX)

# special rules
#-----------------------------------------------------------------------

fft3dlib_f77.o: fft3dlib_f77.F
	$(CPP) 
	f77 $(FFLAGS_F77) -c $*$(SUFFIX)

dos.o : dos.F
	$(CPP)
	$(FC) -c -free $*$(SUFFIX)

radial.o : radial.F
	$(CPP)
	$(FC) -c -free $*$(SUFFIX)

symmetry.o : symmetry.F
	$(CPP)
	$(FC) -c -free $*$(SUFFIX)

